# New Start: A modern Arch workflow built with an emphasis on functionality.
# Copyright (C) 2017 Donovan Glover

# Prevent the mouse from interfering with ncmpcpp
def_key "mouse"
    dummy

# Disable the arrow keys
def_key "left"
    dummy
def_key "down"
    dummy
def_key "up"
    dummy
def_key "right"
    dummy
def_key "shift-up"
    dummy
def_key "shift-down"
    dummy

# Disable other functionality we don't want
def_key "P"
    dummy
def_key  "L"
    dummy
def_key "+"
    dummy
def_key "!"
    dummy

# Use the home row as an alternative to arrow keys
# This also lets you use the h/l keys like ranger to
# move through directories and other structures. It
# also lets you use l to play songs and add tracks
# to the current playlist.
def_key "h"
    previous_column
def_key "h"
    jump_to_parent_directory
def_key "j"
    scroll_down
def_key "k"
    scroll_up
def_key "l"
    next_column
def_key "l"
    enter_directory
def_key "l"
    play_item

# Use the home row for selecting and moving things
def_key "K"
    move_sort_order_up
def_key "K"
    move_selected_items_up
def_key "J"
    move_sort_order_down
def_key "J"
    move_selected_items_down
def_key "H"
    select_item
    scroll_down
def_key "L"
    select_item
    scroll_up

# Easily clear the current selection
def_key "'"
    remove_selection

# Easily scroll up and down, vim style
# Using "d" and "u" directly is also supported, similar to VimFx
def_key "ctrl-u"
    page_up
def_key "ctrl-d"
    page_down
def_key "u"
    page_up
def_key "d"
    page_down

# Use n for next and N for previous, just like vim
def_key "n"
    next_found_item
def_key "N"
    previous_found_item

# Easily switch between the playlist and browser views
def_key "t"
    next_screen

# Sane movement defaults (g = top, G = bottom)
def_key "g"
    move_home
def_key "G"
    move_end

# Use "w" and "b" to go to the next and previous tracks respectively
def_key "w"
    next
def_key "b"
    previous

# Use ";" and "," to move through the track
def_key ";"
    seek_forward
def_key ","
    seek_backward

# Use "f" to apply filters (used often)
def_key "f"
    apply_filter

# Use "i" instead of insert to select items
def_key "i"
    select_item

# Set x to delete since we don't use crossfade. This
# is similar to the functionality seen in VimFx.
def_key "x"
    delete_playlist_items
def_key "x"
    delete_browser_items
def_key "x"
    delete_stored_playlist

# Use "U" to update the music database
def_key "U"
    update_database

# Add random songs to the current playlist
def_key "m"
    add_random_items

# vim:ft=conf
